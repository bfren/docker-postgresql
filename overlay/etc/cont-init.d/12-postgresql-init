#!/usr/bin/with-contenv sh

set -euo pipefail
export BF_E=`basename ${0}`


#======================================================================================================================
# Start server.
#======================================================================================================================

start () {

    # initialise data directory
    bf-debug "Running db-init."
    s6-setuidgid postgres initdb -D "${POSTGRESQL_DATA}"

    # regenerate configuration
    bf-debug "Regenerating configuration files."
    s6-setuidgid postgres ${POSTGRESQL_LIB}/config

    # start server
    bf-echo "Starting PostgreSQL for initialisation."
    s6-setuidgid postgres pg_ctl start -D "${POSTGRESQL_DATA}"

}


#======================================================================================================================
# Stop server.
#======================================================================================================================

stop () {
    bf-echo "Stopping PostgreSQL."
    s6-setuidgid postgres pg_ctl stop -D "${POSTGRESQL_DATA}"
}


#======================================================================================================================
# Check data version against server version.
#======================================================================================================================

[[ -f "/data/PG_VERSION" ]] && POSTGRESQL_DATA_VERSION=`cat /data/PG_VERSION`
POSTGRESQL_SERVER_VERSION=`cat /usr/libexec/postgresql/PG_VERSION`

if [[ -z "${POSTGRESQL_DATA_VERSION-}" ]] || [[ "${POSTGRESQL_DATA_VERSION}" = "${POSTGRESQL_SERVER_VERSION}" ]] ; then
    bf-debug "Versions ok."
else
    MSG="PostgreSQL server (v${POSTGRESQL_SERVER_VERSION}) does not match data (v${POSTGRESQL_DATA_VERSION}). "
    MSG+="You must us db-upgrade or choose an image that matches the data version."
    bf-notok ${MSG}
    s6-svscanctl -t ${S6_SERVICES}
    exit 1
fi


#======================================================================================================================
# Check for restore file.
#======================================================================================================================

if [ -f "${POSTGRESQL_RESTORE}" ] ; then

    # delete existing files
    bf-debug "Deleting existing files."
    bf-rmrf "${POSTGRESQL_DATA}/*"

    # run restore
    start
    bf-debug "Restoring server."
    s6-setuidgid postgres psql -f "${POSTGRESQL_RESTORE}"
    stop

    # delete restore file
    rm "${POSTGRESQL_RESTORE}"

fi


#======================================================================================================================
# Run library init executable.
#======================================================================================================================

if [ ! -f ${POSTGRESQL_DATA}/PG_VERSION ] ; then

    # run init
    start
    bf-debug "Initialising server."
    s6-setuidgid postgres ${POSTGRESQL_LIB}/init
    stop

fi


#======================================================================================================================
# Be friendly.
#======================================================================================================================

bf-debug "Server ready."
