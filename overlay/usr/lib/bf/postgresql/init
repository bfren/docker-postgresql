#!/usr/bin/with-contenv sh

set -euo pipefail
export BF_E=`basename ${0}`


#======================================================================================================================
# Check for application user and password.
#======================================================================================================================

[[ -z "${POSTGRESQL_USERNAME-}" || -z "${POSTGRESQL_PASSWORD-}" ]] \
    && bf-error "POSTGRESQL_USERNAME and POSTGRESQL_PASSWORD must be set."


#======================================================================================================================
# Initialise server, create role and application database(s), enable remote connections.
#======================================================================================================================

# initialise server
bf-debug "Running db-init..."
initdb -D "${POSTGRESQL_DATA}"

# start server for initialisation
bf-echo "Starting PostgreSQL for initialisation."
pg_ctl start -D "${POSTGRESQL_DATA}"

# create specified role
bf-debug "Creating role ${POSTGRESQL_USERNAME}..."
psql -c "CREATE ROLE ${POSTGRESQL_USERNAME} WITH SUPERUSER LOGIN ENCRYPTED PASSWORD '${POSTGRESQL_PASSWORD}';"

# create database(s)
bf-debug "Creating..."
if [ ! -z "${POSTGRESQL_DATABASE-}" ] ; then

    bf-debug " .. specified database(s):"
    DATABASES=$(echo ${POSTGRESQL_DATABASE} | tr "," "\n")

    for DATABASE in ${DATABASES} ; do
        bf-debug " .. ${DATABASE}."
        createdb "${DATABASE}" -O "${POSTGRESQL_USERNAME}"
    done

# no database specified so use username as database name
else

    bf-debug " .. application database: ${POSTGRESQL_USERNAME}."
    createdb "${POSTGRESQL_USERNAME}" -O "${POSTGRESQL_USERNAME}"

fi

# stop server
pg_ctl stop -D "${POSTGRESQL_DATA}"

# enable remote connections
bf-debug "Enabling remote connections..."
echo "host all all 0.0.0.0/0 md5" >> ${POSTGRESQL_DATA}/pg_hba.conf
echo "listen_addresses='*'" >> ${POSTGRESQL_DATA}/postgresql.conf
